/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VRFRaffle,
  VRFRaffleInterface,
} from "../../../contracts/presets/VRFRaffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryCost_",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "subscriptionId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "gasLane_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "RaffleEntry",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "RaffleWinner",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qnty",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasLane",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestConfirmations",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vrfCoordinator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405260016005601c6101000a81548163ffffffff021916908363ffffffff1602179055506003600960006101000a81548161ffff021916908361ffff160217905550620186a0600960026101000a81548163ffffffff021916908363ffffffff1602179055503480156200007557600080fd5b506040516200182a3803806200182a83398181016040528101906200009b91906200036a565b82828281620000bf620000b36200017960201b60201c565b6200018160201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505082600560146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806008819055505050508360048190555050505050620003dc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6200025f816200024a565b81146200026b57600080fd5b50565b6000815190506200027f8162000254565b92915050565b600067ffffffffffffffff82169050919050565b620002a48162000285565b8114620002b057600080fd5b50565b600081519050620002c48162000299565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002f782620002ca565b9050919050565b6200030981620002ea565b81146200031557600080fd5b50565b6000815190506200032981620002fe565b92915050565b6000819050919050565b62000344816200032f565b81146200035057600080fd5b50565b600081519050620003648162000339565b92915050565b6000806000806080858703121562000387576200038662000245565b5b600062000397878288016200026e565b9450506020620003aa87828801620002b3565b9350506040620003bd8782880162000318565b9250506060620003d08782880162000353565b91505092959194509250565b60805161142b620003ff6000396000818161038e01526103e2015261142b6000f3fe6080604052600436106100eb5760003560e01c8063a035b1fe1161008a578063b69ef8a811610059578063b69ef8a8146102a8578063beff730f146102d3578063ddb6facc14610310578063f2fde38b1461033b576100fc565b8063a035b1fe1461020b578063a3e56fa814610236578063a59f3e0c14610261578063b0fb162f1461027d576100fc565b806324f74697116100c657806324f74697146101875780635d495aea146101b2578063715018a6146101c95780638da5cb5b146101e0576100fc565b80626d6cae146101085780630cbb0f83146101335780631fe543e31461015e576100fc565b366100fc576100fa6001610364565b005b6101066001610364565b005b34801561011457600080fd5b5061011d610379565b60405161012a9190610c3b565b60405180910390f35b34801561013f57600080fd5b5061014861037f565b6040516101559190610c3b565b60405180910390f35b34801561016a57600080fd5b5061018560048036038101906101809190610def565b61038c565b005b34801561019357600080fd5b5061019c61044c565b6040516101a99190610e6a565b60405180910390f35b3480156101be57600080fd5b506101c7610462565b005b3480156101d557600080fd5b506101de610474565b005b3480156101ec57600080fd5b506101f5610488565b6040516102029190610ec6565b60405180910390f35b34801561021757600080fd5b506102206104b1565b60405161022d9190610c3b565b60405180910390f35b34801561024257600080fd5b5061024b6104b7565b6040516102589190610ec6565b60405180910390f35b61027b60048036038101906102769190610ee1565b6104dd565b005b34801561028957600080fd5b506102926104e9565b60405161029f9190610f2b565b60405180910390f35b3480156102b457600080fd5b506102bd6104fd565b6040516102ca9190610c3b565b60405180910390f35b3480156102df57600080fd5b506102fa60048036038101906102f59190610ee1565b610503565b6040516103079190610c3b565b60405180910390f35b34801561031c57600080fd5b50610325610527565b6040516103329190610f5f565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d9190610fa6565b61052d565b005b61036d816105b0565b6103768161061b565b50565b60065481565b6000600280549050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043e57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610435929190610fd3565b60405180910390fd5b6104488282610720565b5050565b600960029054906101000a900463ffffffff1681565b61046a610747565b6104726107c5565b565b61047c610747565b61048660006108bf565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104e681610364565b50565b600960009054906101000a900461ffff1681565b60035481565b600a818154811061051357600080fd5b906000526020600020016000915090505481565b60085481565b610535610747565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9061107f565b60405180910390fd5b6105ad816108bf565b50565b600454816105be91906110ce565b34146105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f69061119a565b60405180910390fd5b346003600082825461061191906111ba565b9250508190555050565b60005b818110156106ce57600260405180602001604052803373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505080806106c6906111ee565b91505061061e565b503373ffffffffffffffffffffffffffffffffffffffff167f412ce78c3d80a4d700404d6b23bd33bc193f83ac3caeefb9cdd3003aceb09f6a826040516107159190610c3b565b60405180910390a250565b80600a9080519060200190610736929190610b59565b50600061074281610983565b505050565b61074f61099d565b73ffffffffffffffffffffffffffffffffffffffff1661076d610488565b73ffffffffffffffffffffffffffffffffffffffff16146107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90611282565b60405180910390fd5b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600854600560149054906101000a900467ffffffffffffffff16600960009054906101000a900461ffff16600960029054906101000a900463ffffffff166005601c9054906101000a900463ffffffff166040518663ffffffff1660e01b81526004016108749594939291906112c5565b6020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b7919061132d565b600681905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061098e826109a5565b905061099981610aa5565b5050565b600033905090565b60008082101580156109bb575060028054905082105b6109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f1906113a6565b60405180910390fd5b600060028381548110610a1057610a0f6113c6565b5b906000526020600020016040518060200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060026000610a8b9190610ba6565b610a988160000151610b0f565b8060000151915050919050565b610aad610b55565b6000600354905060006003819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b02573d6000803e3d6000fd5b50610b0b610b57565b5050565b8073ffffffffffffffffffffffffffffffffffffffff167f16d6ae18ca26331fba5a8b53b0749a009d33b172b68a49d64a767782f5b6010360405160405180910390a250565b565b565b828054828255906000526020600020908101928215610b95579160200282015b82811115610b94578251825591602001919060010190610b79565b5b509050610ba29190610bc7565b5090565b5080546000825590600052602060002090810190610bc49190610be4565b50565b5b80821115610be0576000816000905550600101610bc8565b5090565b5b80821115610c1e57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610be5565b5090565b6000819050919050565b610c3581610c22565b82525050565b6000602082019050610c506000830184610c2c565b92915050565b6000604051905090565b600080fd5b600080fd5b610c7381610c22565b8114610c7e57600080fd5b50565b600081359050610c9081610c6a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ce482610c9b565b810181811067ffffffffffffffff82111715610d0357610d02610cac565b5b80604052505050565b6000610d16610c56565b9050610d228282610cdb565b919050565b600067ffffffffffffffff821115610d4257610d41610cac565b5b602082029050602081019050919050565b600080fd5b6000610d6b610d6684610d27565b610d0c565b90508083825260208201905060208402830185811115610d8e57610d8d610d53565b5b835b81811015610db75780610da38882610c81565b845260208401935050602081019050610d90565b5050509392505050565b600082601f830112610dd657610dd5610c96565b5b8135610de6848260208601610d58565b91505092915050565b60008060408385031215610e0657610e05610c60565b5b6000610e1485828601610c81565b925050602083013567ffffffffffffffff811115610e3557610e34610c65565b5b610e4185828601610dc1565b9150509250929050565b600063ffffffff82169050919050565b610e6481610e4b565b82525050565b6000602082019050610e7f6000830184610e5b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eb082610e85565b9050919050565b610ec081610ea5565b82525050565b6000602082019050610edb6000830184610eb7565b92915050565b600060208284031215610ef757610ef6610c60565b5b6000610f0584828501610c81565b91505092915050565b600061ffff82169050919050565b610f2581610f0e565b82525050565b6000602082019050610f406000830184610f1c565b92915050565b6000819050919050565b610f5981610f46565b82525050565b6000602082019050610f746000830184610f50565b92915050565b610f8381610ea5565b8114610f8e57600080fd5b50565b600081359050610fa081610f7a565b92915050565b600060208284031215610fbc57610fbb610c60565b5b6000610fca84828501610f91565b91505092915050565b6000604082019050610fe86000830185610eb7565b610ff56020830184610eb7565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611069602683610ffc565b91506110748261100d565b604082019050919050565b600060208201905081810360008301526110988161105c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110d982610c22565b91506110e483610c22565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561111d5761111c61109f565b5b828202905092915050565b7f616d6f756e742073656e74206d757374206d61746368207175616e746974792060008201527f74696d6573207072696365000000000000000000000000000000000000000000602082015250565b6000611184602b83610ffc565b915061118f82611128565b604082019050919050565b600060208201905081810360008301526111b381611177565b9050919050565b60006111c582610c22565b91506111d083610c22565b92508282019050808211156111e8576111e761109f565b5b92915050565b60006111f982610c22565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361122b5761122a61109f565b5b600182019050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061126c602083610ffc565b915061127782611236565b602082019050919050565b6000602082019050818103600083015261129b8161125f565b9050919050565b600067ffffffffffffffff82169050919050565b6112bf816112a2565b82525050565b600060a0820190506112da6000830188610f50565b6112e760208301876112b6565b6112f46040830186610f1c565b6113016060830185610e5b565b61130e6080830184610e5b565b9695505050505050565b60008151905061132781610c6a565b92915050565b60006020828403121561134357611342610c60565b5b600061135184828501611318565b91505092915050565b7f77696e6e6572206f7574206f6620626f756e6473000000000000000000000000600082015250565b6000611390601483610ffc565b915061139b8261135a565b602082019050919050565b600060208201905081810360008301526113bf81611383565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220f1f9cc74f07e8022e4c449ab7379173d3d599fca9311acfc07e79f5f55ffef0164736f6c63430008100033";

type VRFRaffleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFRaffleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFRaffle__factory extends ContractFactory {
  constructor(...args: VRFRaffleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    entryCost_: PromiseOrValue<BigNumberish>,
    subscriptionId_: PromiseOrValue<BigNumberish>,
    vrfCoordinator_: PromiseOrValue<string>,
    gasLane_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFRaffle> {
    return super.deploy(
      entryCost_,
      subscriptionId_,
      vrfCoordinator_,
      gasLane_,
      overrides || {}
    ) as Promise<VRFRaffle>;
  }
  override getDeployTransaction(
    entryCost_: PromiseOrValue<BigNumberish>,
    subscriptionId_: PromiseOrValue<BigNumberish>,
    vrfCoordinator_: PromiseOrValue<string>,
    gasLane_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      entryCost_,
      subscriptionId_,
      vrfCoordinator_,
      gasLane_,
      overrides || {}
    );
  }
  override attach(address: string): VRFRaffle {
    return super.attach(address) as VRFRaffle;
  }
  override connect(signer: Signer): VRFRaffle__factory {
    return super.connect(signer) as VRFRaffle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFRaffleInterface {
    return new utils.Interface(_abi) as VRFRaffleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFRaffle {
    return new Contract(address, _abi, signerOrProvider) as VRFRaffle;
  }
}
