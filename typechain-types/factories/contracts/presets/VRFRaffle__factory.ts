/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VRFRaffle,
  VRFRaffleInterface,
} from "../../../contracts/presets/VRFRaffle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryCost_",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "subscriptionId_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "gasLane_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "RaffleEntry",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "RaffleWinner",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callbackGasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qnty",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasLane",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestConfirmations",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vrfCoordinator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405260016005601c6101000a81548163ffffffff021916908363ffffffff1602179055506003600960006101000a81548161ffff021916908361ffff160217905550620186a0600960026101000a81548163ffffffff021916908363ffffffff1602179055503480156200007557600080fd5b50604051620017623803806200176283398181016040528101906200009b91906200036a565b82828281620000bf620000b36200017960201b60201c565b6200018160201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505082600560146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806008819055505050508360048190555050505050620003dc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6200025f816200024a565b81146200026b57600080fd5b50565b6000815190506200027f8162000254565b92915050565b600067ffffffffffffffff82169050919050565b620002a48162000285565b8114620002b057600080fd5b50565b600081519050620002c48162000299565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002f782620002ca565b9050919050565b6200030981620002ea565b81146200031557600080fd5b50565b6000815190506200032981620002fe565b92915050565b6000819050919050565b62000344816200032f565b81146200035057600080fd5b50565b600081519050620003648162000339565b92915050565b6000806000806080858703121562000387576200038662000245565b5b600062000397878288016200026e565b9450506020620003aa87828801620002b3565b9350506040620003bd8782880162000318565b9250506060620003d08782880162000353565b91505092959194509250565b608051611363620003ff6000396000818161038e01526103e201526113636000f3fe6080604052600436106100eb5760003560e01c8063a035b1fe1161008a578063b69ef8a811610059578063b69ef8a8146102a8578063beff730f146102d3578063ddb6facc14610310578063f2fde38b1461033b576100fc565b8063a035b1fe1461020b578063a3e56fa814610236578063a59f3e0c14610261578063b0fb162f1461027d576100fc565b806324f74697116100c657806324f74697146101875780635d495aea146101b2578063715018a6146101c95780638da5cb5b146101e0576100fc565b80626d6cae146101085780630cbb0f83146101335780631fe543e31461015e576100fc565b366100fc576100fa6001610364565b005b6101066001610364565b005b34801561011457600080fd5b5061011d610379565b60405161012a9190610c05565b60405180910390f35b34801561013f57600080fd5b5061014861037f565b6040516101559190610c05565b60405180910390f35b34801561016a57600080fd5b5061018560048036038101906101809190610db9565b61038c565b005b34801561019357600080fd5b5061019c61044c565b6040516101a99190610e34565b60405180910390f35b3480156101be57600080fd5b506101c7610462565b005b3480156101d557600080fd5b506101de610474565b005b3480156101ec57600080fd5b506101f5610488565b6040516102029190610e90565b60405180910390f35b34801561021757600080fd5b506102206104b1565b60405161022d9190610c05565b60405180910390f35b34801561024257600080fd5b5061024b6104b7565b6040516102589190610e90565b60405180910390f35b61027b60048036038101906102769190610eab565b6104dd565b005b34801561028957600080fd5b506102926104e9565b60405161029f9190610ef5565b60405180910390f35b3480156102b457600080fd5b506102bd6104fd565b6040516102ca9190610c05565b60405180910390f35b3480156102df57600080fd5b506102fa60048036038101906102f59190610eab565b610503565b6040516103079190610c05565b60405180910390f35b34801561031c57600080fd5b50610325610527565b6040516103329190610f29565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d9190610f70565b61052d565b005b61036d816105b0565b610376816105e5565b50565b60065481565b6000600280549050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043e57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610435929190610f9d565b60405180910390fd5b61044882826106ea565b5050565b600960029054906101000a900463ffffffff1681565b61046a610711565b61047261078f565b565b61047c610711565b6104866000610889565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104e681610364565b50565b600960009054906101000a900461ffff1681565b60035481565b600a818154811061051357600080fd5b906000526020600020016000915090505481565b60085481565b610535610711565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90611049565b60405180910390fd5b6105ad81610889565b50565b600454816105be9190611098565b34146105c957600080fd5b34600360008282546105db91906110f2565b9250508190555050565b60005b8181101561069857600260405180602001604052803373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050808061069090611126565b9150506105e8565b503373ffffffffffffffffffffffffffffffffffffffff167f412ce78c3d80a4d700404d6b23bd33bc193f83ac3caeefb9cdd3003aceb09f6a826040516106df9190610c05565b60405180910390a250565b80600a9080519060200190610700929190610b23565b50600061070c8161094d565b505050565b610719610967565b73ffffffffffffffffffffffffffffffffffffffff16610737610488565b73ffffffffffffffffffffffffffffffffffffffff161461078d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610784906111ba565b60405180910390fd5b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600854600560149054906101000a900467ffffffffffffffff16600960009054906101000a900461ffff16600960029054906101000a900463ffffffff166005601c9054906101000a900463ffffffff166040518663ffffffff1660e01b815260040161083e9594939291906111fd565b6020604051808303816000875af115801561085d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108819190611265565b600681905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006109588261096f565b905061096381610a6f565b5050565b600033905090565b6000808210158015610985575060028054905082105b6109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb906112de565b60405180910390fd5b6000600283815481106109da576109d96112fe565b5b906000526020600020016040518060200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060026000610a559190610b70565b610a628160000151610ad9565b8060000151915050919050565b610a77610b1f565b6000600354905060006003819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610acc573d6000803e3d6000fd5b50610ad5610b21565b5050565b8073ffffffffffffffffffffffffffffffffffffffff167f16d6ae18ca26331fba5a8b53b0749a009d33b172b68a49d64a767782f5b6010360405160405180910390a250565b565b565b828054828255906000526020600020908101928215610b5f579160200282015b82811115610b5e578251825591602001919060010190610b43565b5b509050610b6c9190610b91565b5090565b5080546000825590600052602060002090810190610b8e9190610bae565b50565b5b80821115610baa576000816000905550600101610b92565b5090565b5b80821115610be857600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101610baf565b5090565b6000819050919050565b610bff81610bec565b82525050565b6000602082019050610c1a6000830184610bf6565b92915050565b6000604051905090565b600080fd5b600080fd5b610c3d81610bec565b8114610c4857600080fd5b50565b600081359050610c5a81610c34565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cae82610c65565b810181811067ffffffffffffffff82111715610ccd57610ccc610c76565b5b80604052505050565b6000610ce0610c20565b9050610cec8282610ca5565b919050565b600067ffffffffffffffff821115610d0c57610d0b610c76565b5b602082029050602081019050919050565b600080fd5b6000610d35610d3084610cf1565b610cd6565b90508083825260208201905060208402830185811115610d5857610d57610d1d565b5b835b81811015610d815780610d6d8882610c4b565b845260208401935050602081019050610d5a565b5050509392505050565b600082601f830112610da057610d9f610c60565b5b8135610db0848260208601610d22565b91505092915050565b60008060408385031215610dd057610dcf610c2a565b5b6000610dde85828601610c4b565b925050602083013567ffffffffffffffff811115610dff57610dfe610c2f565b5b610e0b85828601610d8b565b9150509250929050565b600063ffffffff82169050919050565b610e2e81610e15565b82525050565b6000602082019050610e496000830184610e25565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e7a82610e4f565b9050919050565b610e8a81610e6f565b82525050565b6000602082019050610ea56000830184610e81565b92915050565b600060208284031215610ec157610ec0610c2a565b5b6000610ecf84828501610c4b565b91505092915050565b600061ffff82169050919050565b610eef81610ed8565b82525050565b6000602082019050610f0a6000830184610ee6565b92915050565b6000819050919050565b610f2381610f10565b82525050565b6000602082019050610f3e6000830184610f1a565b92915050565b610f4d81610e6f565b8114610f5857600080fd5b50565b600081359050610f6a81610f44565b92915050565b600060208284031215610f8657610f85610c2a565b5b6000610f9484828501610f5b565b91505092915050565b6000604082019050610fb26000830185610e81565b610fbf6020830184610e81565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611033602683610fc6565b915061103e82610fd7565b604082019050919050565b6000602082019050818103600083015261106281611026565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110a382610bec565b91506110ae83610bec565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110e7576110e6611069565b5b828202905092915050565b60006110fd82610bec565b915061110883610bec565b92508282019050808211156111205761111f611069565b5b92915050565b600061113182610bec565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361116357611162611069565b5b600182019050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111a4602083610fc6565b91506111af8261116e565b602082019050919050565b600060208201905081810360008301526111d381611197565b9050919050565b600067ffffffffffffffff82169050919050565b6111f7816111da565b82525050565b600060a0820190506112126000830188610f1a565b61121f60208301876111ee565b61122c6040830186610ee6565b6112396060830185610e25565b6112466080830184610e25565b9695505050505050565b60008151905061125f81610c34565b92915050565b60006020828403121561127b5761127a610c2a565b5b600061128984828501611250565b91505092915050565b7f77696e6e6572206f7574206f6620626f756e6473000000000000000000000000600082015250565b60006112c8601483610fc6565b91506112d382611292565b602082019050919050565b600060208201905081810360008301526112f7816112bb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220fa4fd89414a917dffaa10cd734d1c8da3ac01bbb30768b7305bed7f9b4c8cf9164736f6c63430008100033";

type VRFRaffleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFRaffleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFRaffle__factory extends ContractFactory {
  constructor(...args: VRFRaffleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    entryCost_: PromiseOrValue<BigNumberish>,
    subscriptionId_: PromiseOrValue<BigNumberish>,
    vrfCoordinator_: PromiseOrValue<string>,
    gasLane_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFRaffle> {
    return super.deploy(
      entryCost_,
      subscriptionId_,
      vrfCoordinator_,
      gasLane_,
      overrides || {}
    ) as Promise<VRFRaffle>;
  }
  override getDeployTransaction(
    entryCost_: PromiseOrValue<BigNumberish>,
    subscriptionId_: PromiseOrValue<BigNumberish>,
    vrfCoordinator_: PromiseOrValue<string>,
    gasLane_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      entryCost_,
      subscriptionId_,
      vrfCoordinator_,
      gasLane_,
      overrides || {}
    );
  }
  override attach(address: string): VRFRaffle {
    return super.attach(address) as VRFRaffle;
  }
  override connect(signer: Signer): VRFRaffle__factory {
    return super.connect(signer) as VRFRaffle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFRaffleInterface {
    return new utils.Interface(_abi) as VRFRaffleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFRaffle {
    return new Contract(address, _abi, signerOrProvider) as VRFRaffle;
  }
}
